"use strict";
function addReactHotModuleReplacementBabelTransform(webpackConfig) {
    var moduleRules = webpackConfig.module.rules // Webpack  < 2.1.0 beta 23
        || webpackConfig.module.loaders; // Webpack >= 2.1.0 beta 23
    moduleRules.forEach(function (loaderConfig) {
        if (loaderConfig.loader && loaderConfig.loader.match(/\bbabel-loader\b/)) {
            // Ensure the babel-loader options includes a 'query'
            var query = loaderConfig.query = loaderConfig.query || {};
            // Ensure Babel plugins includes 'react-transform'
            var plugins = query['plugins'] = query['plugins'] || [];
            var hasReactTransform = plugins.some(function (p) { return p && p[0] === 'react-transform'; });
            if (!hasReactTransform) {
                plugins.push(['react-transform', {}]);
            }
            // Ensure 'react-transform' plugin is configured to use 'react-transform-hmr'
            plugins.forEach(function (pluginConfig) {
                if (pluginConfig && pluginConfig[0] === 'react-transform') {
                    var pluginOpts = pluginConfig[1] = pluginConfig[1] || {};
                    var transforms = pluginOpts.transforms = pluginOpts.transforms || [];
                    var hasReactTransformHmr = transforms.some(function (t) { return t.transform === 'react-transform-hmr'; });
                    if (!hasReactTransformHmr) {
                        transforms.push({
                            transform: 'react-transform-hmr',
                            imports: ['react'],
                            locals: ['module'] // Important for Webpack HMR
                        });
                    }
                }
            });
        }
    });
}
exports.addReactHotModuleReplacementBabelTransform = addReactHotModuleReplacementBabelTransform;
